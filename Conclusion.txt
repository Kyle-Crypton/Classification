本程序旨在对比机器学习中的分类问题下，各个主流算法对高维度的数据的分类预测准确率的差异。数据集中的每一个数据都含有3304维度的属性，其中训练集的样本数量为1000个，测试集的样本数量为800个，样本分类为两类。程序测试了各个主流算法，并将最后的结果以可视化的方式，在图表中进行了清晰的对比。对比的算法为SVM，贝叶斯分类器和加权与非加权的K-nn算法。
作为现代机器学习的两大主流思想之一的SVM，在这个问题的解决中表现的相当出色，通过对数据集的多次训练，对于选取不同数量的高权重属性，SVM的准确率均保持在了最高的水平，正确率高达97.125%。在计算的时间方面，SVM所消耗的时间处于一个较为中等和可接受的水平。
贝叶斯分类器不同于SVM的链接思想，该分类器更多的是基于概率学的基础之上进行分类。贝叶斯分类器在选取较少的高权重属性时，能够得倒比较好的结果。但是随着属性选择的增多，贝叶斯分类器的正确率就明显下降，没有办法得到较好的结果。因为贝叶斯分类器基于的概率的基础，所以在运行速度上，贝叶斯分类器的速度最快，几乎能够即时的响应结果。
对于另一个十大经典算法的K-nn算法，不难发现运用最普通的K-nn算法的时候，无论选择的属性数量，相较于另两个算法，K-nn算法的正确率最低，而且因为需要计算两两点之间的欧式距离，所以速度相当缓慢。所以相较而言，K-nn算法的实用性最差。所以我尝试着引入了权重的概念，在计算欧式距离的过程中，我加入了加权欧式距离，对于权重的赋值较好的情况，譬如MTL和CEMTL的标签下，K-nn加权算法的总体表现甚至优于贝叶斯分类器。但是对于那些无法很好刻画属性权重的比如CMTL标签，其结果可能会劣于未使用权重的K-nn算法。所以当我们对每个属性的权重有较为全面的认识的时候，加权的K-nn算法会是一个比较不错的选择，但是因为整个计算过程仍然需要使用到两两点之间的欧式距离的计算，所以在时间方面，K-nn算法的消耗时间让人比较难以接受，或许在引入多线程的计算条件下可以有效的改善这个缺点。
综上所述，对于分类问题，使用SVM将会是一个比较好的方法，在保证高精度的情况下，SVM算法所消耗的时间也在可以接受的范围之内。